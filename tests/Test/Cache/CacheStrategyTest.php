<?php
namespace Test\Cache;

use Luxury\Support\Facades\Cache;
use Phalcon\Cache\Frontend\Base64;
use Phalcon\Cache\Frontend\Data;
use Phalcon\Cache\Frontend\Json;
use Test\TestCase\TestCase;

/**
 * Trait CacheStrategyTest
 *
 * @package Cache
 */
class CacheStrategyTest extends TestCase
{
    public static function setUpBeforeClass()
    {
        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub

        global $config;

        $config = array_merge($config, [
            'cache' => [
                'default' => [
                    'adapter' => 'Json', // Files, Memcache, Libmemcached, Redis
                    'driver'  => 'File', // Files, Memcache, Libmemcached, Redis
                    'options' => ['cacheDir' => __DIR__ . '/../.data/'],
                ],
                'fast'    => [
                    'adapter' => 'Data', // Files, Memcache, Libmemcached, Redis
                    'driver'  => 'File', // Files, Memcache, Libmemcached, Redis
                    'options' => ['cacheDir' => __DIR__ . '/../.data/'],
                ],
                'slow'    => [
                    'adapter' => 'Base64', // Files, Memcache, Libmemcached, Redis
                    'driver'  => 'File', // Files, Memcache, Libmemcached, Redis
                    'options' => ['cacheDir' => __DIR__ . '/../.data/'],
                ]
            ]
        ]);
    }

    public function testUses()
    {
        $cacheInstance = Cache::uses();
        $this->assertInstanceOf(Json::class, $cacheInstance->getFrontend());

        $cacheInstance = Cache::uses('fast');
        $this->assertInstanceOf(Data::class, $cacheInstance->getFrontend());

        $cacheInstance = Cache::uses('slow');
        $this->assertInstanceOf(Base64::class, $cacheInstance->getFrontend());

        $cacheInstance = Cache::uses();
        $this->assertInstanceOf(Base64::class, $cacheInstance->getFrontend());
    }
}
